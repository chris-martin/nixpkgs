{ fetchurl, fetchFromGitHub, haskell, makeWrapper, stdenv, ... }:

let

  trezor-rev = "ec21884db9f3af236732121e7ccf97435b924915";

  data = fetchurl {
    url = "https://raw.githubusercontent.com/trezor/python-mnemonic/" +
          trezor-rev + "/mnemonic/wordlist/english.txt";
    sha256 = "1nnv4hxyv8pkxzw9yvb40f2yb47wkqckz3qdi3w4nyvjli9yspig";
  };

  src = fetchFromGitHub {
    owner = "chris-martin";
    repo = "wordlist";
    rev = "492e26fa4fdf5bda4ef3ea15939a0bc191fcbb71";
    sha256 = "1q5isydifcfjp5bykg15p46vvx8223bx166pi30znl5v6mb4ajw1";
  };

  # Generated by cabal2nix
  haskFn = { mkDerivation, base, containers, MonadRandom, optparse-applicative
           , stdenv, text }:
    mkDerivation {
      inherit src;
      pname = "wordlist";
      version = "0.1.0.0";
      isLibrary = true;
      isExecutable = true;
      libraryHaskellDepends = [ base optparse-applicative text ];
      executableHaskellDepends = [
        base containers MonadRandom optparse-applicative text
      ];
      license = stdenv.lib.licenses.asl20;
    };

  hask = haskell.packages.ghc801.callPackage haskFn { };

in stdenv.mkDerivation {
  name = "wordlist";
  inherit src;
  buildInputs = [ makeWrapper ];
  installPhase = ''
    mkdir -p $out/bin
    cp ${hask}/bin/wordlist $out/bin
    wrapProgram $out/bin/wordlist --set WORD_LIST_PATH ${data}
  '';
  passthru = { env = hask.env; };
}
